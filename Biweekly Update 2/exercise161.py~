import numpy as np
import pylab as plt
import os
def transformer(number):
    number_i = number
    n_iter = 0
    while number_i != 1:
          if number_i %2 ==0:
              number_i = number_i //2
          else:
              number_i = 3 * number_i + 1
          n_iter += 1
    return number, n_iter

print(transformer(12))

import matplotlib.pyplot as plt

# Define a function to calculate iterations for a range of numbers
def collatz_iterations(max_num):
    x_vals = list(range(1, max_num + 1))  # Initial guesses
    y_vals = [transformer(x)[1] for x in x_vals]  # Corresponding iterations
    return x_vals, y_vals

# Plotting the number of iterations for each initial guess
max_num = 50
x_vals, y_vals = collatz_iterations(max_num)

plt.figure(figsize=(10, 6))
plt.plot(x_vals, y_vals, marker='o', linestyle='-', color='b', markersize=5)
plt.title(f'Collatz Conjecture: Iterations to Convergence (1 to {max_num})')
plt.xlabel('Initial Guess (Positive Integer)')
plt.ylabel('Number of Iterations to Reach 1')
plt.grid(True)
plt.show()

